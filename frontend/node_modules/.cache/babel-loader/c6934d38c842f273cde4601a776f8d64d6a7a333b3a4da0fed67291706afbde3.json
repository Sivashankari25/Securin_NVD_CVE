{"ast":null,"code":"var _jsxFileName = \"D:\\\\NVD---CVE-API-main\\\\NVD---CVE-API-main\\\\frontend\\\\src\\\\CveDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CveDetail = () => {\n  _s();\n  var _cveData$descriptions;\n  const {\n    cveId\n  } = useParams();\n  const [cveData, setCveData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCveDetail = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/cves/${cveId}`);\n        if (!response.ok) {\n          throw new Error(`API call failed with status ${response.status}`);\n        }\n        const data = await response.json();\n        setCveData(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCveDetail();\n  }, [cveId]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"CVE Detail: \", cveId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), cveData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 24\n        }, this), \" \", (_cveData$descriptions = cveData.descriptions[0]) === null || _cveData$descriptions === void 0 ? void 0 : _cveData$descriptions.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Published Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 24\n        }, this), \" \", new Date(cveData.published).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Last Modified:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 24\n        }, this), \" \", new Date(cveData.lastModified).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 24\n        }, this), \" \", cveData.vulnStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for this CVE.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(CveDetail, \"eaqGs5j9Ob2VrDEsz1MSDJBh1bQ=\", false, function () {\n  return [useParams];\n});\n_c = CveDetail;\nexport default CveDetail;\nvar _c;\n$RefreshReg$(_c, \"CveDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","CveDetail","_s","_cveData$descriptions","cveId","cveData","setCveData","isLoading","setIsLoading","error","setError","fetchCveDetail","response","fetch","ok","Error","status","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","padding","fontFamily","descriptions","value","Date","published","toLocaleDateString","lastModified","vulnStatus","_c","$RefreshReg$"],"sources":["D:/NVD---CVE-API-main/NVD---CVE-API-main/frontend/src/CveDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst CveDetail = () => {\r\n    const { cveId } = useParams();\r\n    const [cveData, setCveData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchCveDetail = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/api/cves/${cveId}`);\r\n                if (!response.ok) {\r\n                    throw new Error(`API call failed with status ${response.status}`);\r\n                }\r\n\r\n                const data = await response.json();\r\n                setCveData(data);\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchCveDetail();\r\n    }, [cveId]);\r\n\r\n    if (isLoading) return <p>Loading...</p>;\r\n    if (error) return <p style={{ color: 'red' }}>{error}</p>;\r\n\r\n    return (\r\n        <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n            <h1>CVE Detail: {cveId}</h1>\r\n            {cveData ? (\r\n                <div>\r\n                    <p><strong>Description:</strong> {cveData.descriptions[0]?.value}</p>\r\n                    <p><strong>Published Date:</strong> {new Date(cveData.published).toLocaleDateString()}</p>\r\n                    <p><strong>Last Modified:</strong> {new Date(cveData.lastModified).toLocaleDateString()}</p>\r\n                    <p><strong>Status:</strong> {cveData.vulnStatus}</p>\r\n                </div>\r\n            ) : (\r\n                <p>No data available for this CVE.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CveDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}